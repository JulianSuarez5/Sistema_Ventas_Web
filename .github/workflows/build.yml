name: SonarCloud Scan

on:
  push:
    branches:
      - master # Asegúrate de que esta sea la rama principal de tu repositorio
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and Analyze
    runs-on: windows-latest

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Necesario para el análisis de historial de SonarCloud

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v2.0.0

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: SonarCloud Begin Scan
        shell: powershell
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin `
            /k:"JulianSuarez5_Sistema_Ventas_Web" `
            /o:"juliansuarez5" `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
            /d:sonar.host.url="https://sonarcloud.io" `
            /d:sonar.cs.msbuild.targets="C:\Program Files (x86)\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\Microsoft.CSharp.targets"
            # Puedes añadir más propiedades aquí si son necesarias
            # Por ejemplo, para especificar la solución si no la detecta automáticamente:
            # /d:sonar.projectKey="JulianSuarez5_Sistema_Ventas_Web"
            # /d:sonar.organization="juliansuarez5"
            # /d:sonar.projectName="Sistema_Ventas_Web"
            # /d:sonar.sourceEncoding="UTF-8"
            # /d:sonar.sources="."
            # /d:sonar.branch.name="${{ github.ref_name }}" # Esto es importante si manejas múltiples ramas

      - name: Restore NuGet packages
        shell: powershell
        run: nuget restore Sistema_Ventas_Web.sln

      - name: Build solution
        shell: powershell
        run: msbuild /t:Rebuild Sistema_Ventas_Web.sln

      - name: SonarCloud End Scan
        shell: powershell
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
